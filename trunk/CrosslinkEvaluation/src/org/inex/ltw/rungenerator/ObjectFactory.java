//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.5-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.12.06 at 11:42:21 AM EST 
//


package org.inex.ltw.rungenerator;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Outgoing_QNAME = new QName("", "outgoing");
    private final static QName _Collections_QNAME = new QName("", "collections");
    private final static QName _Topic_QNAME = new QName("", "topic");
    private final static QName _Details_QNAME = new QName("", "details");
    private final static QName _Linkto_QNAME = new QName("", "linkto");
    private final static QName _Link_QNAME = new QName("", "link");
    private final static QName _Incoming_QNAME = new QName("", "incoming");
    private final static QName _Machine_QNAME = new QName("", "machine");
    private final static QName _Anchor_QNAME = new QName("", "anchor");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DetailsType }
     * 
     */
    public DetailsType createDetailsType() {
        return new DetailsType();
    }

    /**
     * Create an instance of {@link CollectionType }
     * 
     */
    public CollectionType createCollectionType() {
        return new CollectionType();
    }

    /**
     * Create an instance of {@link LinktoType }
     * 
     */
    public LinktoType createLinktoType() {
        return new LinktoType();
    }

    /**
     * Create an instance of {@link LinkType }
     * 
     */
    public LinkType createLinkType() {
        return new LinkType();
    }

    /**
     * Create an instance of {@link InexSubmission }
     * 
     */
    public InexSubmission createInexSubmission() {
        return new InexSubmission();
    }

    /**
     * Create an instance of {@link AnchorType }
     * 
     */
    public AnchorType createAnchorType() {
        return new AnchorType();
    }

    /**
     * Create an instance of {@link LinkingType }
     * 
     */
    public LinkingType createLinkingType() {
        return new LinkingType();
    }

    /**
     * Create an instance of {@link MachineType }
     * 
     */
    public MachineType createMachineType() {
        return new MachineType();
    }

    /**
     * Create an instance of {@link TopicType }
     * 
     */
    public TopicType createTopicType() {
        return new TopicType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinkingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "outgoing")
    public JAXBElement<LinkingType> createOutgoing(LinkingType value) {
        return new JAXBElement<LinkingType>(_Outgoing_QNAME, LinkingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CollectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "collections")
    public JAXBElement<CollectionType> createCollections(CollectionType value) {
        return new JAXBElement<CollectionType>(_Collections_QNAME, CollectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TopicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "topic")
    public JAXBElement<TopicType> createTopic(TopicType value) {
        return new JAXBElement<TopicType>(_Topic_QNAME, TopicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DetailsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "details")
    public JAXBElement<DetailsType> createDetails(DetailsType value) {
        return new JAXBElement<DetailsType>(_Details_QNAME, DetailsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinktoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "linkto")
    public JAXBElement<LinktoType> createLinkto(LinktoType value) {
        return new JAXBElement<LinktoType>(_Linkto_QNAME, LinktoType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinkType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "link")
    public JAXBElement<LinkType> createLink(LinkType value) {
        return new JAXBElement<LinkType>(_Link_QNAME, LinkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinkingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "incoming")
    public JAXBElement<LinkingType> createIncoming(LinkingType value) {
        return new JAXBElement<LinkingType>(_Incoming_QNAME, LinkingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MachineType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "machine")
    public JAXBElement<MachineType> createMachine(MachineType value) {
        return new JAXBElement<MachineType>(_Machine_QNAME, MachineType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AnchorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "anchor")
    public JAXBElement<AnchorType> createAnchor(AnchorType value) {
        return new JAXBElement<AnchorType>(_Anchor_QNAME, AnchorType.class, null, value);
    }

}
