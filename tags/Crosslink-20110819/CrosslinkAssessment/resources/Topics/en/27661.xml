<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 93 $ on 26.02.2011 07:41:48[cl1n033] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Source code</title>
<id>27661</id>
<revision>
<id>373266948</id>
<timestamp>2010-07-13T14:50:00Z</timestamp>
<contributor>
<username>Chuunen Baka</username>
<id>24506</id>
</contributor>
</revision>
<categories>
<category>:Source code</category>
</categories>
</header>
<bdy>


<p>

Image:CodeCmmt002.svg|thumb|right|300px|An illustration of Java source code with prologue comments indicated in red, inline comments indicated in green, and program code indicated in blue.]]
In computer science, <b>source code</b> is any collection of statements or declarations written in some human-readable computer programming language.  Source code is the means most often used by programmers to specify the actions to be performed by a computer.</p>
<p>

The source code which constitutes a program is usually held in one or more text files, sometimes stored in databases as stored procedures and may also appear as code snippets printed in books or other media.  A large collection of source code files may be organized into a directory tree, in which case it may also be known as a <b>source tree</b>.</p>
<p>

A computer program's source code is the collection of files needed to convert from human-readable form to some kind of computer-executable form.  The source code may be converted into an executable file by a compiler, or executed on the fly from the human readable form with the aid of an interpreter.</p>
<p>

The <b>code base</b> of a programming project is the larger collection of all the source code of all the computer programs which make up the project.</p>

<sec>
<st>
 Organization </st>
<p>

The source code for a particular piece of software may be contained in a single file or many files. Though the practice is uncommon, a program's source code can be written in different programming languages.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> For example, a program written primarily in the C programming language, might have portions written in Assembly language for optimization purposes. It is also possible for some components of a piece of software to be written and compiled separately, in an arbitrary programming language, and later integrated into the software using a technique called library linking. This is the case in some languages, such as Java: each class is compiled separately into a file and linked by the interpreter at runtime. </p>
<p>

Yet another method is to make the main program an interpreter for a programming language, either designed specifically for the application in question or general-purpose, and then write the bulk of the actual user functionality as macros or other forms of add-ins in this language, an approach taken for example by the GNU Emacs text editor.</p>
<p>

Moderately complex software customarily requires the compilation or assembly of several, sometimes dozens or even hundreds, of different source code files. In these cases, instructions for compilations, such as a Makefile, are included with the source code. These describe the relationships among the source code files, and contain information about how they are to be compiled. </p>
<p>

The revision control system is another tool frequently used by developers for source code maintenance.</p>

</sec>
<sec>
<st>
 Purposes </st>
<p>

Source code is primarily used as input to the process that produces an executable program (ie., it is compiled or interpreted). It is also used as a method of communicating algorithms between people (eg., code snippets in books).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>
<p>

Programmers often find it helpful to review existing source code to learn about programming techniques.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> The sharing of source code between developers is frequently cited as a contributing factor to the maturation of their programming skills.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> Some people consider source code an expressive artistic medium.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

Porting software to other computer platforms is usually prohibitively difficult without source code. Without the source code for a particular piece of software, portability is generally computationally expensive .  Possible porting options include binary translation and emulation of the original platform.</p>
<p>

Decompilation of an executable program can be used to generate source code, either in assembly code or in a high level language.</p>
<p>

Programmers frequently adapt source code from one piece of software to use in other projects, a concept known as software reusability.</p>

</sec>
<sec>
<st>
 Licensing </st>
<p>


Software, and its accompanying source code, typically falls within one of two licensing paradigms: free software and proprietary software. 
Generally speaking, software is <it>free</it> if the source code is free to use, distribute, modify and study, and <it>proprietary</it> if the source code is kept secret, or is privately owned and restricted. Note that "free" refers to freedom, not price. Under many licenses it is acceptable to charge for "free software". The first free software license to be published and to explicitly grant these freedoms was the GNU General Public License in 1989. The GNU GPL was originally intended to be used with the GNU operating system. The GNU GPL was later adopted by other non-GNU software projects such as the Linux kernel.
For proprietary software, the provisions of the various copyright laws, trade secrecy and patents are used to keep the source code closed.  Additionally, many pieces of retail software come with an end-user license agreement (EULA) which typically prohibits decompilation, reverse engineering, analysis, modification, or circumventing of copy protection.  Types of source code protection -- beyond traditional compilation to object code -- include code encryption, code obfuscation or code morphing.</p>

</sec>
<sec>
<st>
 Legal issues in the United States </st>
<p>


In a 2003 court case in the United States, the court ruled that source code should be considered a Constitutionally protected form of free speech. Proponents of free speech argued that because source code conveys information to programmers, is written in a language, and can be used to share humour and other artistic pursuits, it is a protected form of communication.</p>
<p>

One of the first court cases regarding the nature of source code as free speech involved University of California mathematics professor Dan Bernstein, who had published on the internet the source code for an encryption program that he created. At the time, encryption algorithms were classified as munitions by the United States government; exporting encryption to other countries was considered an issue of national security, and had to be approved by the State Department. The Electronic Frontier Foundation sued the U.S. government on Bernstein's behalf; the court ruled that source code was free speech, protected by the First Amendment.</p>

</sec>
<sec>
<st>
 Quality </st>
<p>


The way a program is written can have important consequences for its maintainers. Many source code programming style guides, which stress readability and some language-specific conventions are aimed at the maintenance of the software source code, which involves debugging and updating. Other priorities, such as the speed of the programs execution, or the ability to compile the program for multiple architectures, often make code readability a less important consideration, since code <it>quality</it> depends entirely on its <it>purpose</it>.</p>

</sec>
<sec>
<st>
 See also </st>
<p>


<list>
<entry level="1" type="bullet">

 China Compulsory Certificate</entry>
<entry level="1" type="bullet">

 Legacy code</entry>
<entry level="1" type="bullet">

 Machine code</entry>
<entry level="1" type="bullet">

 Open-source software</entry>
<entry level="1" type="bullet">

 Obfuscated code</entry>
<entry level="1" type="bullet">

 Object code</entry>
<entry level="1" type="bullet">

 Programming language</entry>
<entry level="1" type="bullet">

 Programming style</entry>
<entry level="1" type="bullet">

 Source code repository</entry>
<entry level="1" type="bullet">

 Syntax highlighting</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>
<p>

<reflist>
<entry id="1">
Extending and Embedding the Python Interpreter â€” Python v2.6 Documentation <weblink xlink:type="simple" xlink:href="http://docs.python.org/extending/">
http://docs.python.org/extending/</weblink></entry>
<entry id="2">
Spinellis, D: <it>Code Reading: The Open Source Perspective</it>. Addison-Wesley Professional, 2003. ISBN 0-201-79940-5</entry>
<entry id="3">
"<it>Art and Computer Programming</it>" <weblink xlink:type="simple" xlink:href="http://www.onlamp.com/pub/a/onlamp/2005/06/30/artofprog.html">
ONLamp.com</weblink>, (2005)</entry>
</reflist>

<list>
<entry level="1" type="bullet">

 (VEW04) "Using a Decompiler for Real-World Source Recovery", M. Van Emmerik and T. Waddington, the <it>Working Conference on Reverse Engineering</it>, Delft, Netherlands, 9-12 November 2004. <weblink xlink:type="simple" xlink:href="http://www.itee.uq.edu.au/~emmerik/experience_long.pdf">
Extended version of the paper</weblink>.</entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.linfo.org/source_code.html">
Source Code Definition</weblink> - by The Linux Information Project (LINFO)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.google.com/codesearch?">
Google public source code search</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://codewiki.wikispaces.com/">
A publicly editable wiki of source code</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.sourcepod.com/">
Online source code sharing</weblink></entry>
<entry level="1" type="bullet">

 </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.programmer2programmer.net/project.aspx">
Programmer2programmer.Net - Live project source code</weblink></entry>
</list>
</p>

<p>

</p>
</sec>
</bdy>
</article>
